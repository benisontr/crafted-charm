<%- include('./partials/header') %>
<%- include('./partials/userHeader') %>

<div class="container py-5">
  <% if (carts.length === 0) { %>
    <div class="text-center py-5">
      <i class="fas fa-shopping-cart fa-3x text-muted mb-4"></i>
      <h4 class="mb-3">Your cart is empty</h4>
      <a href="/shop" class="btn btn-outline-primary rounded-pill px-4">
        Continue Shopping
      </a>
    </div>
  <% } else { %>
    <h2 class="mb-4">Your Shopping Cart</h2>
    <div class="table-responsive">
      <table class="table align-middle text-center border">
        <thead class="table-light">
          <tr>
            <th></th>
            <th>Product</th>
            <th></th>
            <th>Price</th>
            <th style="width: 120px;">Quantity</th>
            <th>Subtotal</th>
          </tr>
        </thead>
        <tbody id="cart-body">
          <% carts.forEach(item => {
              const product = item.productId;
              if (!product) return;
          %>
          <tr class="cart-row" data-id="<%= product._id %>">
            <td>
              <button class="btn btn-sm btn-danger remove-from-cart" data-id="<%= product._id %>">
                <i class="fas fa-trash-alt"></i>
              </button>
            </td>
            <td style="width: 100px;">
              <a href="/product?id=<%= product._id %>">
                <img src="<%= product.images[0] %>" class="img-fluid rounded" alt="<%= product.name %>">
              </a>
            </td>
            <td class="text-start">
              <a href="/product?id=<%= product._id %>" class="text-decoration-none text-dark fw-medium">
                <%= product.name %>
              </a>
            </td>
            <td class="product-price" data-price="<%= product.discount || product.price %>">
              ₹<%= product.discount || product.price %>
            </td>
            <td>
              <input type="number" class="form-control text-center quantity-input" value="1" min="1">
            </td>
            <td class="product-subtotal">
              ₹<span class="subtotal-value"><%= product.discount || product.price %></span>
            </td>
          </tr>
          <% }) %>
        </tbody>
      </table>
    </div>

    <!-- Order Summary -->
    <div class="row justify-content-end">
      <div class="col-md-6 col-lg-5">
        <div class="card shadow-sm border-0 mt-4">
          <div class="card-body">
            <h5 class="card-title">Order Summary</h5>
            <hr>
            <div class="d-flex justify-content-between mb-3">
              <span>Total</span>
              <strong>₹<span id="cart-total">0</span></strong>
            </div>
            <form id="checkout-form" action="/checkout" method="POST">
              <input type="hidden" name="cartData" id="cartDataInput">
              <button type="submit" class="btn btn-primary w-100">
                Proceed to Checkout
              </button>
            </form>
            <a href="/shop" class="btn btn-outline-secondary w-100 mt-2">Continue Shopping</a>
          </div>
        </div>
      </div>
    </div>
  <% } %>
</div>

<%- include('./partials/footer') %>

<style>
.table td,
.table th {
  vertical-align: middle;
}
</style>

<script>
function updateCartTotals() {
  let total = 0;
  const cartSummary = [];

  document.querySelectorAll(".cart-row").forEach(row => {
    const productId = row.dataset.id;
    const productName = row.querySelector(".text-dark")?.textContent.trim();
    const price = parseFloat(row.querySelector(".product-price").dataset.price);
    const qty = parseInt(row.querySelector(".quantity-input").value) || 1;
    const subtotal = price * qty;

    row.querySelector(".subtotal-value").textContent = subtotal.toFixed(2);
    total += subtotal;

    cartSummary.push({
      productId,
      name: productName,
      quantity: qty,
      price,
      subtotal: subtotal.toFixed(2)
    });
  });

  document.getElementById("cart-total").textContent = total.toFixed(2);
  document.getElementById("cartDataInput").value = JSON.stringify({
    items: cartSummary,
    total: total.toFixed(2)
  });
}

document.addEventListener("DOMContentLoaded", function () {
  updateCartTotals();

  document.querySelectorAll(".quantity-input").forEach(input => {
    input.addEventListener("input", updateCartTotals);
    input.addEventListener("change", updateCartTotals);
  });

  document.getElementById("checkout-form").addEventListener("submit", () => {
    updateCartTotals();
  });

  document.querySelectorAll(".remove-from-cart").forEach(btn => {
    btn.addEventListener("click", async function (e) {
      e.preventDefault();
      const productId = this.dataset.id;

      try {
        const res = await fetch(`/cart/remove?id=${productId}`, { method: "DELETE" });
        const data = await res.json();

        if (data.success) {
          this.closest(".cart-row").remove();
          updateCartTotals();
        } else {
          alert(data.message || "Could not remove item.");
        }
      } catch (err) {
        console.error("Error:", err);
        alert("Something went wrong.");
      }
    });
  });
});
</script>
