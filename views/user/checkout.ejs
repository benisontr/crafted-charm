<%- include('./partials/header') %>
<%- include('./partials/userHeader') %>

<div class="checkout-container">
  <div class="container">
    <form id="checkoutForm" class="checkout-form">
      <div class="row">
        <!-- Billing Details Column -->
        <div class="col-lg-6">
          <div class="checkout-section">
            <h2 class="section-title">Billing Details</h2>
            
            <div class="mb-4">
              <input type="text" class="form-control" id="first-name" placeholder="Full Name *" value="<%- user.name %>" required>
            </div>

            <div class="mb-4">
              <select class="form-select" id="billingCountry" name="billingCountry" required>
                <option value="" disabled selected>Select Country *</option>
              </select>
            </div>

            <div class="row g-3">
              <div class="col-md-6">
                <input type="text" class="form-control mb-4" id="billingState" placeholder="State *" value="<%= user.address[0]?.billing?.state || '' %>" required>
              </div>
              <div class="col-md-6">
                <input type="text" class="form-control mb-4" id="billingCity" placeholder="City *" value="<%= user.address[0]?.billing?.city || '' %>" required>
              </div>
            </div>

            <div class="mb-4">
              <input type="text" class="form-control" id="billingAddressLine2" placeholder="Street Address *" value="<%= user.address[0]?.billing?.addressLine || '' %>" required>
            </div>

            <div class="mb-4">
              <input type="text" class="form-control" id="billingPincode" placeholder="ZIP Code *" value="<%= user.address[0]?.billing?.pincode || '' %>" required>
            </div>

            <div class="row g-3">
              <div class="col-md-6">
                <input type="tel" class="form-control mb-4" id="phone" value="<%- user.mobile %>" placeholder="Phone *" required oninput="validatePhone()">
                <div class="invalid-feedback">Please enter a valid 10-digit phone number</div>
              </div>
              <div class="col-md-6">
                <input type="email" class="form-control mb-4" id="email" value="<%- user.email %>" placeholder="Email *" required oninput="validateEmail()">
                <div class="invalid-feedback">Please enter a valid email address</div>
              </div>
            </div>

            <div class="mb-4">
              <textarea class="form-control" id="notes" rows="2" placeholder="Order notes (optional)"></textarea>
            </div>
          </div>
        </div>

        <!-- Order Summary Column -->
        <div class="col-lg-6">
          <div class="checkout-section">
            <h2 class="section-title">Your Order</h2>
            <div class="order-summary">
              <div class="order-items">
                <% if (cart && cart.length > 0) { %>
                  <% cart.forEach(item => { %>
                    <div class="order-item">
                      <div class="item-name"><%= item.name %> <span class="item-quantity">×<%= item.quantity %></span></div>
                      <div class="item-price">₹<%= item.subtotal %></div>
                    </div>
                  <% }) %>
                <% } else { %>
                  <div class="empty-cart">No products in cart</div>
                <% } %>
              </div>

              <div class="order-totals">
                <div class="total-row">
                  <span>Subtotal</span>
                  <span>₹<%= total %></span>
                </div>
                <div class="total-row">
                  <span>Shipping</span>
                  <span id="shippingCharge">₹0.00</span>
                </div>
                <div class="total-row">
                  <span>Coupon Discount</span>
                  <span id="discount">-₹0.00</span>
                </div>
                <div class="total-row grand-total">
                  <span>Total</span>
                  <span id="total-amount">₹<%= total %></span>
                </div>

                <!-- Hidden values for JS use -->
                <input type="hidden" id="baseTotal" value="<%= total %>">
                <input type="hidden" id="finalTotal" name="finalTotal" value="<%= total %>">
              </div>
            </div>

            <!-- Coupon Section -->
            <div class="coupon-section">
              <h3 class="coupon-title">Apply Coupon</h3>
              <div class="coupon-options">
                <div class="form-check coupon-option">
                  <input class="form-check-input" type="radio" name="selectedCoupon" id="noneCoupon" value="none" checked>
                  <label class="form-check-label" for="noneCoupon">No Coupon</label>
                </div>
                <% if (coupons.length > 0) { %>
                  <% coupons.forEach((coupon, index) => { %>
                    <div class="form-check coupon-option">
                      <input class="form-check-input" type="radio" name="selectedCoupon" id="coupon_<%= index %>" value="<%= coupon.code %>">
                      <label class="form-check-label" for="coupon_<%= index %>">
                        <%= coupon.code %> - <%= coupon.discountPercentage %>% Off
                      </label>
                    </div>
                  <% }) %>
                <% } else { %>
                  <div class="no-coupons">No active coupons available</div>
                <% } %>
              </div>

              <div class="coupon-input-group">
                <input type="text" class="form-control" id="couponCodeInput" placeholder="Enter coupon code">
                <button type="button" class="btn btn-outline-primary" id="applyCouponBtn">Apply</button>
              </div>
            </div>

            <!-- Payment Method -->
            <div class="payment-methods">
              <h3 class="payment-title">Payment Method</h3>
              <div class="payment-option">
                <input type="radio" id="radioPhonepe" name="payment" value="phonepe" checked>
                <label for="radioPhonepe">
                  <div class="payment-content">
                    <div class="payment-method">
                      <span>PhonePe</span>
                      <img src="/assets/images/phonepe-logo.png" alt="PhonePe" width="60">
                    </div>
                    <p class="payment-description">Pay via PhonePe using UPI, credit/debit cards, or wallet</p>
                  </div>
                </label>
              </div>
            </div>

            <button type="submit" class="btn btn-primary btn-checkout">
              Proceed to Payment <i class="bi bi-arrow-right"></i>
            </button>
          </div>
        </div>
      </div>
    </form>
  </div>
</div>

<%- include('./partials/footer') %>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const couponRadios = document.querySelectorAll('input[name="selectedCoupon"]');
    const manualInput = document.getElementById("couponCodeInput");
    const applyBtn = document.getElementById("applyCouponBtn");
    const discountSpan = document.getElementById("discount");
    const totalAmountSpan = document.getElementById("total-amount");
    const finalTotalInput = document.getElementById("finalTotal");
    const shippingChargeSpan = document.getElementById("shippingCharge");
    const billingStateInput = document.getElementById("billingState");
    const baseTotal = parseFloat(document.getElementById("baseTotal").value);
    const coupons = <%- JSON.stringify(coupons) %>;
    let currentDiscountPercentage = 0;

   function formatCurrency(value) {
  return `₹${parseFloat(value).toFixed(2)}`;
}

    function getShippingCharge(subTotalAfterDiscount) {
      return subTotalAfterDiscount < 2500 ? 100 : 0;
    }

      function updateTotals() {
  const discountAmount = (baseTotal * currentDiscountPercentage) / 100;
  const subTotalAfterDiscount = baseTotal - discountAmount;
  const shippingCharge = getShippingCharge(subTotalAfterDiscount);
  const finalTotal = (subTotalAfterDiscount + shippingCharge).toFixed(2);

  shippingChargeSpan.textContent = formatCurrency(shippingCharge);
  discountSpan.textContent = `-${formatCurrency(discountAmount)}`;
  totalAmountSpan.textContent = formatCurrency(finalTotal);
  finalTotalInput.value = finalTotal;
}

    function applyCoupon(code) {
      if (code === "none") {
        currentDiscountPercentage = 0;
        updateTotals();
        return;
      }

      const selected = coupons.find(c => c.code.toLowerCase() === code.toLowerCase());
      if (!selected) {
        alert("Invalid or expired coupon code.");
        currentDiscountPercentage = 0;
        document.getElementById("noneCoupon").checked = true;
        updateTotals();
        return;
      }

      currentDiscountPercentage = selected.discountPercentage;
      updateTotals();
    }

    couponRadios.forEach(radio => {
      radio.addEventListener("change", () => applyCoupon(radio.value));
    });

    applyBtn.addEventListener("click", () => {
      const code = manualInput.value.trim();
      if (!code) return alert("Enter a coupon code");
      applyCoupon(code);
      couponRadios.forEach(radio => {
        radio.checked = radio.value.toLowerCase() === code.toLowerCase();
      });
    });

    billingStateInput.addEventListener("input", updateTotals);
    applyCoupon(document.querySelector('input[name="selectedCoupon"]:checked').value);
  });

  function validatePhone() {
    const input = document.getElementById("phone");
    const err = input.nextElementSibling;
    input.value = input.value.replace(/\D/g, '');
    if (input.value.length !== 10) {
      input.classList.add('is-invalid'); err.style.display = 'block';
    } else {
      input.classList.remove('is-invalid'); err.style.display = 'none';
    }
  }

  function validateEmail() {
    const input = document.getElementById("email");
    const err = input.nextElementSibling;
    const regex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!regex.test(input.value)) {
      input.classList.add('is-invalid'); err.style.display = 'block';
    } else {
      input.classList.remove('is-invalid'); err.style.display = 'none';
    }
  }

  document.getElementById("checkoutForm").addEventListener("submit", async function (e) {
    e.preventDefault();
    const requiredFields = ['first-name', 'billingCountry', 'billingState', 'billingCity', 'billingPincode', 'phone', 'email'];
    let isValid = true;

    requiredFields.forEach(id => {
      const input = document.getElementById(id);
      if (!input.value.trim()) {
        input.classList.add('is-invalid');
        isValid = false;
      } else {
        input.classList.remove('is-invalid');
      }
    });

    validatePhone(); validateEmail();

    if (!isValid ||
      document.getElementById("phone").classList.contains('is-invalid') ||
      document.getElementById("email").classList.contains('is-invalid')) return;

    const cartData = <%- JSON.stringify({ items: cart, total }) %>;
    const address = {
      name: document.getElementById("first-name").value,
      phone: document.getElementById("phone").value,
      email: document.getElementById("email").value,
      state: document.getElementById("billingState").value,
      city: document.getElementById("billingCity").value,
      pincode: document.getElementById("billingPincode").value,
      line: document.getElementById("billingAddressLine2").value
    };

    const shippingCharge = parseFloat(document.getElementById("shippingCharge").textContent.replace(/[^\d.]/g, "")) || 0;
    const discount = parseFloat(document.getElementById("discount").textContent.replace(/[^\d.]/g, "")) || 0;
    const total = parseFloat(document.getElementById("finalTotal").value) || 0;

    try {
      const response = await fetch("/create-phonepe-order", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ cartData: JSON.stringify(cartData), address, shippingCharge, discount, total })
      });
      const result = await response.json();
      if (result.checkoutPageUrl) window.location.href = result.checkoutPageUrl;
      else alert("❌ Payment URL not received.");
    } catch (err) {
      console.error("❌ Payment error:", err);
      alert("Something went wrong.");
    }
  });

  async function populateCountryDropdowns() {
    try {
      const response = await fetch("/api/countries");
      const countries = await response.json();
      const selects = document.querySelectorAll("#billingCountry");

      countries.forEach(country => {
        const option = document.createElement("option");
        option.value = country;
        option.textContent = country;
        selects.forEach(select => select.appendChild(option.cloneNode(true)));
      });
    } catch (err) {
      console.error("Error fetching country list:", err);
    }
  }

  document.addEventListener("DOMContentLoaded", () => setTimeout(populateCountryDropdowns, 200));
</script>


    <style>
      /* Modern Fonts */
      @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&family=Playfair+Display:wght@400;500;600&display=swap');
      
      :root {
        --primary-color: #4f46e5;
        --primary-hover: #4338ca;
        --secondary-color: #6b7280;
        --light-color: #f9fafb;
        --dark-color: #111827;
        --border-color: #e5e7eb;
        --success-color: #10b981;
        --error-color: #ef4444;
        --font-primary: 'Poppins', sans-serif;
        --font-secondary: 'Playfair Display', serif;
      }
      
      body {
        font-family: var(--font-primary);
        background-color: #f8f9fa;
        color: var(--dark-color);
        line-height: 1.6;
      }
      
      .checkout-container {
        padding: 2rem 0;
      }
      
      .checkout-section {
        background: white;
        border-radius: 12px;
        padding: 2rem;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
        margin-bottom: 2rem;
      }
      
      .section-title {
        font-family: var(--font-secondary);
        font-weight: 600;
        font-size: 1.75rem;
        margin-bottom: 1.5rem;
        color: var(--dark-color);
        position: relative;
        padding-bottom: 0.75rem;
      }
      
      .section-title:after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 60px;
        height: 3px;
        background: var(--primary-color);
        border-radius: 3px;
      }
      
      .form-floating {
        position: relative;
      }
      
      .form-control, .form-select {
        border: 1px solid #e0e0e0 !important;
        padding: 12px 15px !important;
        border-radius: 8px !important;
        font-size: 14px !important;
        transition: all 0.3s ease !important;
      }

      .form-control:focus, .form-select:focus {
        border-color: #333 !important;
        box-shadow: none !important;
      }

      .form-control::placeholder, .form-select option:disabled {
        color: #888 !important;
      }

      textarea.form-control {
        min-height: 100px;
        resize: vertical;
      }
    
      label {
        font-weight: 500;
        color: var(--secondary-color);
      }
      
      label span {
        color: var(--error-color);
      }
      
      .order-summary {
        border: 1px solid var(--border-color);
        border-radius: 10px;
        overflow: hidden;
        margin-bottom: 2rem;
      }
      
      .order-items {
        max-height: 300px;
        overflow-y: auto;
      }
      
      .order-item {
        display: flex;
        justify-content: space-between;
        padding: 1rem 1.5rem;
        border-bottom: 1px solid var(--border-color);
      }
      
      .item-name {
        font-weight: 500;
      }
      
      .item-quantity {
        color: var(--secondary-color);
        font-size: 0.9em;
      }
      
      .item-price {
        font-weight: 600;
      }
      
      .empty-cart {
        padding: 1.5rem;
        text-align: center;
        color: var(--secondary-color);
      }
      
      .order-totals {
        padding: 1.5rem;
        background-color: var(--light-color);
      }
      
      .total-row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 0.75rem;
      }
      
      .total-row:last-child {
        margin-bottom: 0;
      }
      
      .grand-total {
        font-size: 1.1rem;
        font-weight: 600;
        padding-top: 1rem;
        margin-top: 1rem;
        border-top: 1px solid var(--border-color);
      }
      
      .coupon-section {
        margin-bottom: 2rem;
      }
      
      .coupon-title {
        font-size: 1.25rem;
        font-weight: 600;
        margin-bottom: 1rem;
        color: var(--dark-color);
      }
      
      .coupon-options {
        margin-bottom: 1.5rem;
      }
      
      .coupon-option {
        padding: 0.75rem 1rem;
        border: 1px solid var(--border-color);
        border-radius: 8px;
        margin-bottom: 0.75rem;
        transition: all 0.3s ease;
      }
      
      .coupon-option:hover {
        border-color: var(--primary-color);
      }
      
      .form-check-input {
        margin-top: 0.3rem;
      }
      
      .coupon-name {
        font-weight: 500;
        margin-left: 0.5rem;
      }
      
      .coupon-discount {
        margin-left: auto;
        color: var(--success-color);
        font-weight: 600;
      }
      
      .no-coupons {
        padding: 1rem;
        text-align: center;
        color: var(--secondary-color);
        background-color: var(--light-color);
        border-radius: 8px;
      }
      
      .coupon-input-group {
        display: flex;
        gap: 0.5rem;
      }
      
      .coupon-input-group .form-control {
        flex: 1;
      }
      
      .coupon-input-group .btn {
        min-width: 100px;
      }
      
      .payment-methods {
        margin-bottom: 2rem;
      }
      
      .payment-title {
        font-size: 1.25rem;
        font-weight: 600;
        margin-bottom: 1rem;
        color: var(--dark-color);
      }
      
      .payment-option {
        margin-bottom: 1rem;
      }
      
      .payment-option input[type="radio"] {
        display: none;
      }
      
      .payment-option label {
        display: block;
        padding: 1.25rem;
        border: 1px solid var(--border-color);
        border-radius: 10px;
        cursor: pointer;
        transition: all 0.3s ease;
      }
      
      .payment-option input[type="radio"]:checked + label {
        border-color: var(--primary-color);
        background-color: rgba(79, 70, 229, 0.05);
      }
      
      .payment-content {
        display: flex;
        flex-direction: column;
      }
      
      .payment-method {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 0.5rem;
        font-weight: 600;
      }
      
      .payment-description {
        color: var(--secondary-color);
        font-size: 0.9rem;
        margin-bottom: 0;
      }
      
      .btn-checkout {
        width: 100%;
        padding: 1rem;
        font-size: 1.1rem;
        font-weight: 600;
        border-radius: 10px;
        background-color: var(--primary-color);
        border: none;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
      }
      
      .btn-checkout:hover {
        background-color: var(--primary-hover);
        transform: translateY(-2px);
      }
      
      .invalid-feedback {
        display: none;
        color: var(--error-color);
        font-size: 0.85rem;
        margin-top: 0.25rem;
      }
      
      @media (max-width: 991.98px) {
        .checkout-section {
          padding: 1.5rem;
        }
      }
      
      @media (max-width: 767.98px) {
        .section-title {
          font-size: 1.5rem;
        }
        
        .coupon-input-group {
          flex-direction: column;
        }
        
        .coupon-input-group .btn {
          width: 100%;
        }
      }
    </style>
